{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,MAAOC,SAASC,cAAc,kBAC9BC,KAAMF,SAASC,cAAc,iBAC7BE,OAAQH,SAASC,cAAc,mBAC/BG,OAAQJ,SAASC,cAAc,WAiCjC,SAASI,EAAcC,EAAUP,GAC/B,MAAMQ,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAAEL,E,MAAUP,IAEpBa,EAAO,C,SAAEN,E,MAAUP,GAAQ,GAE5BA,EAAM,G,CAtCbD,EAAKM,OAAOU,iBAAiB,SAE7B,SAAoBC,GAClBA,EAAMC,iBAEN,IAAIC,EAAQC,OAAOpB,EAAKC,MAAMoB,OAC9B,MAAMjB,EAAOgB,OAAOpB,EAAKI,KAAKiB,OACxBhB,EAASe,OAAOpB,EAAKK,OAAOgB,OAElC,GAAIF,EAAQ,GAAKf,EAAO,GAAKC,GAAU,EAGrC,YAFAiB,EAAAxB,GAASyB,OAAOC,QAAQ,sCAK1B,IAAK,IAAIC,EAAW,EAAGA,GAAYpB,EAAQoB,GAAY,EACrDlB,EAAckB,EAAUN,GACrBO,MAAK,EAAClB,SAAEA,EAAQP,MAAEA,MACjBqB,EAAAxB,GAASyB,OAAOI,QAAQ,sBAAsBnB,QAAeP,MAAU,IAExE2B,OAAM,EAACpB,SAAEA,EAAQP,MAAEA,MAClBqB,EAAAxB,GAASyB,OAAOM,QAAQ,qBAAqBrB,QAAeP,MAAU,IAG1EkB,GAASf,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  delay: document.querySelector(\"[name='delay']\"),\n  step: document.querySelector('[name=\"step\"]'),\n  amount: document.querySelector('[name=\"amount\"]'),\n  submit: document.querySelector('button'),\n};\n\n// refs.submit.addEventListener('submit', onSubmitForm);\n\nrefs.submit.addEventListener('click', onClickBtn);\n\nfunction onClickBtn(event) {\n  event.preventDefault();\n\n  let delay = Number(refs.delay.value);\n  const step = Number(refs.step.value);\n  const amount = Number(refs.amount.value);\n\n  if (delay < 0 || step < 0 || amount <= 0) {\n    Notiflix.Notify.warning('Please choose a number more then 0');\n\n    return;\n  }\n\n  for (let position = 1; position <= amount; position += 1) {\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(` Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(` Rejected promise ${position} in ${delay}ms`);\n      });\n\n    delay += step;\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$refs","delay","document","querySelector","step","amount","submit","$47d4ff9957288465$var$createPromise","position","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","event","preventDefault","delay1","Number","value","$parcel$interopDefault","Notify","warning","position1","then","success","catch","failure"],"version":3,"file":"03-promises.dc5a05e2.js.map"}